// Code generated by "stringer -type=tokenType"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[LEFT_CURLY_BRACES-1]
	_ = x[RIGHT_CURLY_BRACES-2]
	_ = x[LEFT_SQUARE_BRACKET-3]
	_ = x[RIGHT_SQUARE_BRACKET-4]
	_ = x[COLON-5]
	_ = x[COMMA-7]
	_ = x[STRING-8]
	_ = x[NUMBER-9]
	_ = x[BOOLEAN-10]
	_ = x[NULL-11]
	_ = x[EOF-12]
}

const (
	_tokenType_name_0 = "INVALIDLEFT_CURLY_BRACESRIGHT_CURLY_BRACESLEFT_SQUARE_BRACKETRIGHT_SQUARE_BRACKETCOLON"
	_tokenType_name_1 = "COMMASTRINGNUMBERBOOLEANNULLEOF"
)

var (
	_tokenType_index_0 = [...]uint8{0, 7, 24, 42, 61, 81, 86}
	_tokenType_index_1 = [...]uint8{0, 5, 11, 17, 24, 28, 31}
)

func (i tokenType) String() string {
	switch {
	case 0 <= i && i <= 5:
		return _tokenType_name_0[_tokenType_index_0[i]:_tokenType_index_0[i+1]]
	case 7 <= i && i <= 12:
		i -= 7
		return _tokenType_name_1[_tokenType_index_1[i]:_tokenType_index_1[i+1]]
	default:
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
